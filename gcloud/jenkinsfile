pipeline {

    agent any  
    environment {
        PROJECT_ID="1"
        CLUSTER_NAME = "Some Cluster IP"
        LOCATION = ''
        CREDENTIALS_ID = ''
        KUBERNETES_APPLICATION_MANIFEST_URL = "https://github.com/LovePelmeni/EmailService/kubernetes/application.yaml" // URL address to the Manifest of the applicaton...
        NEW_API_VERSION = "" // need to specify new api version that is going to be released...
        DOCKERFILE_GITHUB_URL = "https://github.com/LovePelmeni/EmailService/Dockerfile" // url to the Target Docker file
    }

    stages {
        
        stage("build") {    
            steps{
                sh "echo 'Bulding Application...'"
                docker build  --name=new_version_application
                sh "echo 'Application Imgae has been build successfully... Passing to the Testing Stage...'"
            }
        }
        stage("test"){
            steps {
                sh "Running Default Tests..."
                sh "Running gRPC Integration Tests...."
                sh "Tested...."
            }
        }
        stage("deploy"){
            steps {
                sh "echo 'Tagging new Version of the API...'"
                sh "docker tag new_version_application crazycoderrr/email_service@" + env.NEW_API_VERSION
                sh "echo 'Pulling to the registry...'"
                sh "docker pull crazycoderrr/email_service@" + env.NEW_API_VERSION 
                sh "Pulled... Sending Update Request to the Production Kubernetes Cluster...."

                 $class: 'KubernetesEngineBuilder',
                    projectId: env.PROJECT_ID,
                    clusterName: env.CLUSTER_NAME,
                    location: env.LOCATION,
                    manifestPattern: env.KUBERNETES_APPLICATION_MANIFEST_URL,
                    credentialsId: env.CREDENTIALS_ID,
                    verifyDeployments: true])
            }
        }
    }
}